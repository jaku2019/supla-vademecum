declare const _sfc_main: import("vue").DefineComponent<{
    srcImgs: {
        type: ArrayConstructor;
        required: true;
    };
    lazy: {
        type: BooleanConstructor;
        required: true;
        default: boolean;
    };
    config: {
        type: ObjectConstructor;
        required: true;
        default: () => {
            height: number;
            noActiveWidth: number;
            activeWidth: number;
            margin: number;
            zIndex: number;
        };
    };
}, {
    props: any;
    height: number;
    noActiveWidth: number;
    activeWidth: number;
    margin: number;
    finalHeight: string;
    finalActiveWidth: string;
    finalNoActiveWidth: string;
    optionsWidth: string;
    mark: import("vue").Ref<any>;
    defaultActive: import("vue").Ref<number>;
    isLoad: import("vue").Ref<boolean>;
    isShowImageViewer: import("vue").Ref<boolean>;
    prevOverflow: string;
    curImg: import("vue").ComputedRef<string>;
    handleClick: (index: number) => void;
    reset: () => void;
    picViewer: import("vue").DefineComponent<{
        imgLink: {
            type: StringConstructor;
            required: true;
        };
        modelValue: {
            type: BooleanConstructor;
            required: true;
        };
        zIndex: {
            type: NumberConstructor;
            required: true;
        };
    }, {
        props: any;
        emit: {
            (e: "close"): void;
            (e: "open"): void;
            (e: "update:modelValue", newVal: boolean): void;
        };
        zIndex: number;
        zIndexPlus: number;
        modelValue: import("vue").WritableComputedRef<boolean>;
        close: () => void;
    }, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("close" | "open" | "update:modelValue")[], "close" | "open" | "update:modelValue", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
        imgLink: {
            type: StringConstructor;
            required: true;
        };
        modelValue: {
            type: BooleanConstructor;
            required: true;
        };
        zIndex: {
            type: NumberConstructor;
            required: true;
        };
    }>> & {
        onClose?: ((...args: any[]) => any) | undefined;
        onOpen?: ((...args: any[]) => any) | undefined;
        "onUpdate:modelValue"?: ((...args: any[]) => any) | undefined;
    }, {}>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    srcImgs: {
        type: ArrayConstructor;
        required: true;
    };
    lazy: {
        type: BooleanConstructor;
        required: true;
        default: boolean;
    };
    config: {
        type: ObjectConstructor;
        required: true;
        default: () => {
            height: number;
            noActiveWidth: number;
            activeWidth: number;
            margin: number;
            zIndex: number;
        };
    };
}>>, {
    config: Record<string, any>;
}>;
export default _sfc_main;
