import { defineComponent as E, useCssVars as B, ref as u, computed as N, onMounted as O, openBlock as m, createElementBlock as g, createElementVNode as l, Fragment as R, renderList as U, normalizeClass as q, toDisplayString as y, createVNode as L, unref as k, isRef as M, pushScopeId as $, popScopeId as D } from "vue";
import F from "./pic-viewer.mjs";
const H = (c) => ($("data-v-a0bf96cf"), c = c(), D(), c), P = { class: "container" }, j = { class: "options" }, G = ["data-img", "onClick"], J = /* @__PURE__ */ H(() => /* @__PURE__ */ l("div", { class: "shadow" }, null, -1)), K = { class: "label" }, Q = { class: "info" }, T = { class: "main" }, X = { class: "sub" }, Y = {
  name: "ManyPictures"
}, te = /* @__PURE__ */ E({
  ...Y,
  props: {
    srcImgs: null,
    lazy: { type: Boolean, default: !1 },
    config: { default: () => ({
      height: 300,
      noActiveWidth: 50,
      activeWidth: 400,
      margin: 5,
      zIndex: 100
    }) }
  },
  setup(c) {
    const s = c;
    B((t) => ({
      "65ad1171": z,
      "7b406518": w,
      "66d51cf2": x,
      "7c439e33": A
    }));
    const { height: I, noActiveWidth: p, activeWidth: h, margin: v } = s.config, w = I + v * 2 + "px", A = h + "px", x = p + "px", z = (s.srcImgs.length - 1) * (p + 2 * v) + (h + 2 * v) + "px", r = u(), d = u(0), f = u(!s.lazy);
    let a = u(!1), _ = "";
    const C = N(() => {
      var t;
      return f.value ? (t = s.srcImgs[d.value]) == null ? void 0 : t.link : "";
    });
    O(() => {
      if (s.lazy) {
        const t = new IntersectionObserver(
          (e) => {
            e.forEach((i) => {
              if (i.intersectionRatio <= 0)
                return;
              const n = i.target, b = n.getAttribute("data-img");
              n.setAttribute("style", `background-image: url(${b})`), t.unobserve(n);
            });
          },
          {
            root: r.value
          }
        ), o = new IntersectionObserver((e) => {
          e.forEach((i) => {
            if (i.intersectionRatio <= 0)
              return;
            const n = i.target;
            n.querySelectorAll(".option").forEach((W) => {
              t.observe(W);
            }), f.value = !0, o.unobserve(n);
          });
        });
        o.observe(r.value);
      } else
        r.value.querySelectorAll(".option").forEach((o) => {
          const e = o.getAttribute("data-img");
          o.setAttribute("style", `background-image: url(${e})`);
        });
    });
    function V(t) {
      f.value && d.value === t && (_ = document.body.style.overflow, document.body.style.overflow = "hidden", a.value = !0), d.value = t;
    }
    function S() {
      document.body.style.overflow = _;
    }
    return (t, o) => (m(), g("div", {
      class: "many-pictures",
      ref_key: "mark",
      ref: r
    }, [
      l("div", P, [
        l("div", j, [
          (m(!0), g(R, null, U(s.srcImgs, (e, i) => (m(), g("div", {
            class: q(["option", { active: i === d.value }]),
            "data-img": e.link,
            onClick: (n) => V(i)
          }, [
            J,
            l("div", K, [
              l("div", Q, [
                l("div", T, y(e.title), 1),
                l("div", X, y(e.description), 1)
              ])
            ])
          ], 10, G))), 256))
        ])
      ]),
      L(F, {
        modelValue: k(a),
        "onUpdate:modelValue": o[0] || (o[0] = (e) => M(a) ? a.value = e : a = e),
        "img-link": k(C),
        "z-index": s.config.zIndex,
        onClose: S
      }, null, 8, ["modelValue", "img-link", "z-index"])
    ], 512));
  }
});
export {
  te as default
};
